<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fc.dao.SelectedcourseMapper">
  <resultMap id="BaseResultMap" type="com.fc.entity.Selectedcourse">
    <result column="courseID" jdbcType="INTEGER" property="courseid" />
    <result column="studentID" jdbcType="INTEGER" property="studentid" />
    <result column="mark" jdbcType="INTEGER" property="mark" />
  </resultMap>

  <resultMap id="SelectedCourseVoMap" type="com.fc.vo.SelectedcourseVo">
    <id column="courseID" jdbcType="INTEGER" property="couseCustom.courseid" />
    <result column="courseName" jdbcType="VARCHAR" property="couseCustom.coursename" />
    <result column="teacherID" jdbcType="INTEGER" property="couseCustom.teacherid" />
    <result column="courseTime" jdbcType="VARCHAR" property="couseCustom.coursetime" />
    <result column="classRoom" jdbcType="VARCHAR" property="couseCustom.classroom" />
    <result column="courseWeek" jdbcType="INTEGER" property="couseCustom.courseweek" />
    <result column="courseType" jdbcType="VARCHAR" property="couseCustom.coursetype" />
    <result column="collegeID" jdbcType="INTEGER" property="couseCustom.collegeid" />
    <result column="score" jdbcType="INTEGER" property="couseCustom.score" />
    <result column="mark" jdbcType="INTEGER" property="mark"/>
  </resultMap>

  <select id="findCourseByMark" parameterType="java.lang.Integer" resultMap="SelectedCourseVoMap">
    select c.* from selectedcourse sd inner join course c on sd.courseID = c.courseID where sd.studentID = #{id} and sd.mark Is NULL
  </select>

  <select id="findOverCourseByMark" parameterType="java.lang.Integer" resultMap="SelectedCourseVoMap">
    select c.*, sd.mark from selectedcourse sd inner join course c on sd.courseID = c.courseID where sd.studentID = #{id} and sd.mark IS NOT NULL
  </select>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    courseID, studentID, mark
  </sql>
  <select id="selectStudentByCourse" parameterType="java.lang.Integer" resultType="com.fc.entity.Student">
    select s.* from selectedcourse sd inner join student s on sd.studentID = s.userID where sd.courseID = #{id}
  </select>
  <select id="selectByExample" parameterType="com.fc.entity.SelectedcourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from selectedcourse
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.fc.entity.SelectedcourseExample">
    delete from selectedcourse
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fc.entity.Selectedcourse">
    insert into selectedcourse (courseID, studentID, mark
      )
    values (#{courseid,jdbcType=INTEGER}, #{studentid,jdbcType=INTEGER}, #{mark,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fc.entity.Selectedcourse">
    insert into selectedcourse
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="courseid != null">
        courseID,
      </if>
      <if test="studentid != null">
        studentID,
      </if>
      <if test="mark != null">
        mark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="courseid != null">
        #{courseid,jdbcType=INTEGER},
      </if>
      <if test="studentid != null">
        #{studentid,jdbcType=INTEGER},
      </if>
      <if test="mark != null">
        #{mark,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fc.entity.SelectedcourseExample" resultType="java.lang.Long">
    select count(*) from selectedcourse
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update selectedcourse
    <set>
      <if test="record.courseid != null">
        courseID = #{record.courseid,jdbcType=INTEGER},
      </if>
      <if test="record.studentid != null">
        studentID = #{record.studentid,jdbcType=INTEGER},
      </if>
      <if test="record.mark != null">
        mark = #{record.mark,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update selectedcourse
    set courseID = #{record.courseid,jdbcType=INTEGER},
      studentID = #{record.studentid,jdbcType=INTEGER},
      mark = #{record.mark,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>